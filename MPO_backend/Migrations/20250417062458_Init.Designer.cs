// <auto-generated />
using System;
using MPO_backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MPO_backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250417062458_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MPO_backend.Models.ProductionOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DocNum")
                        .HasColumnType("bigint");

                    b.Property<string>("Instruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructionFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Photo")
                        .HasColumnType("bit");

                    b.Property<string>("ProdItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdTestInstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WhsName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductionOrders");
                });

            modelBuilder.Entity("MPO_backend.Models.ProductionOrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Instruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductionOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuppCatNum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductionOrderId");

                    b.ToTable("ProductionOrderItems");
                });

            modelBuilder.Entity("MPO_backend.Models.QualityTest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ElectricalTest")
                        .HasColumnType("bit");

                    b.Property<bool>("MechanicalTest")
                        .HasColumnType("bit");

                    b.Property<bool>("OperationalTest")
                        .HasColumnType("bit");

                    b.Property<Guid>("SerialNumberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TestResult")
                        .HasColumnType("bit");

                    b.Property<bool>("VisualTest")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("SerialNumberId")
                        .IsUnique();

                    b.ToTable("QualityTests");
                });

            modelBuilder.Entity("MPO_backend.Models.SerialNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ProductionNumber")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ProductionOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("SerialNo")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductionOrderId");

                    b.ToTable("SerialNumbers");
                });

            modelBuilder.Entity("MPO_backend.Models.ProductionOrderItem", b =>
                {
                    b.HasOne("MPO_backend.Models.ProductionOrder", "ProductionOrder")
                        .WithMany("ProductionOrderItems")
                        .HasForeignKey("ProductionOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductionOrder");
                });

            modelBuilder.Entity("MPO_backend.Models.QualityTest", b =>
                {
                    b.HasOne("MPO_backend.Models.SerialNumber", "SerialNumber")
                        .WithOne("QualityTest")
                        .HasForeignKey("MPO_backend.Models.QualityTest", "SerialNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SerialNumber");
                });

            modelBuilder.Entity("MPO_backend.Models.SerialNumber", b =>
                {
                    b.HasOne("MPO_backend.Models.ProductionOrder", null)
                        .WithMany("SerialNumbers")
                        .HasForeignKey("ProductionOrderId");
                });

            modelBuilder.Entity("MPO_backend.Models.ProductionOrder", b =>
                {
                    b.Navigation("ProductionOrderItems");

                    b.Navigation("SerialNumbers");
                });

            modelBuilder.Entity("MPO_backend.Models.SerialNumber", b =>
                {
                    b.Navigation("QualityTest");
                });
#pragma warning restore 612, 618
        }
    }
}
